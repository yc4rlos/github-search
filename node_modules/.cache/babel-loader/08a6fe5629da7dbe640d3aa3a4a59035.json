{"ast":null,"code":"var _jsxFileName = \"/home/yan/Documentos/Projects/github-search/src/providers/github-provider.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useCallback, useState } from 'react';\nimport api from '../Services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GithubContext = /*#__PURE__*/createContext({\n  user: {},\n  repositories: [],\n  starred: []\n});\n\nconst GithubProvider = ({\n  children\n}) => {\n  _s();\n\n  const [githubState, setGithubState] = useState({\n    hasUser: false,\n    loading: false,\n    user: {\n      avatar: undefined,\n      login: undefined,\n      name: undefined,\n      html_url: undefined,\n      blog: undefined,\n      company: undefined,\n      location: undefined,\n      followers: 0,\n      following: 0,\n      public_gists: 0,\n      public_repos: 0\n    },\n    repositories: [],\n    starred: []\n  });\n\n  const getUser = username => {\n    setGithubState(prevState => ({ ...prevState,\n      loading: !prevState.loading\n    }));\n    api.get(`/users/${username}`).then(({\n      data\n    }) => {\n      setGithubState(prevState => ({ ...prevState,\n        hasUser: true,\n        user: {\n          avatar: data.avatar_url,\n          login: data.login,\n          name: data.name,\n          html_url: data.html_url,\n          blog: data.blog,\n          company: data.company,\n          location: data.location,\n          followers: data.followers,\n          following: data.following,\n          public_gists: data.public_gists,\n          public_repos: data.public_repos\n        }\n      }));\n    }).finally(() => {\n      setGithubState(prevState => ({ ...prevState,\n        loading: !prevState.loading\n      }));\n    });\n  };\n\n  const getUserRepos = () => {\n    api.get(`/users/r3sp31t4/repos`).them(({\n      data\n    }) => {\n      setGithubState(prevState => ({ ...prevState,\n        repositories: []\n      }));\n    });\n  };\n\n  const contextValue = {\n    githubState,\n    getUser: useCallback(username => getUser(username), []),\n    getUserRepos: useCallback(() => getUserRepos(), [])\n  };\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GithubProvider, \"VXc9dJJgS6zyVk8xQt9wt5cP4tM=\");\n\n_c = GithubProvider;\nexport default GithubProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubProvider\");","map":{"version":3,"sources":["/home/yan/Documentos/Projects/github-search/src/providers/github-provider.js"],"names":["React","createContext","useCallback","useState","api","GithubContext","user","repositories","starred","GithubProvider","children","githubState","setGithubState","hasUser","loading","avatar","undefined","login","name","html_url","blog","company","location","followers","following","public_gists","public_repos","getUser","username","prevState","get","then","data","avatar_url","finally","getUserRepos","them","contextValue"],"mappings":"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","sourcesContent":["import React, {createContext, useCallback,useState} from 'react';\nimport api from '../Services/api'\n\nexport const GithubContext = createContext({\n    user:{\n        \n    },\n    repositories: [],\n    starred: [],\n});\n\nconst GithubProvider = ({children}) => {\n\n    const [githubState, setGithubState] = useState({ \n        hasUser: false,\n        loading: false,\n        user:{\n            avatar: undefined,\n            login: undefined,\n            name: undefined,\n            html_url: undefined,\n            blog: undefined,\n            company: undefined,\n            location:undefined,\n            followers: 0,\n            following: 0,\n            public_gists: 0,\n            public_repos: 0,\n        },\n        repositories: [],\n        starred: [],\n    });\n\n    const getUser = (username) => {\n        setGithubState((prevState) => ({\n            ...prevState,\n            loading: !prevState.loading,\n        }));\n\n        api.get(`/users/${username}`).then(({data}) =>\n            {\n                setGithubState(prevState => ({\n                ...prevState,\n                hasUser: true,\n                user:{\n                    avatar: data.avatar_url,\n                    login: data.login,\n                    name: data.name,\n                    html_url: data.html_url,\n                    blog: data.blog,\n                    company: data.company,\n                    location: data.location,\n                    followers: data.followers,\n                    following: data.following,\n                    public_gists: data.public_gists,\n                    public_repos: data.public_repos,\n            },\n                }));\n            }).finally(()=>{\n                setGithubState((prevState) => ({\n                    ...prevState,\n                    loading: !prevState.loading,\n                }));\n            })\n    };\n\n    const getUserRepos = () => {\n        api.get(`/users/r3sp31t4/repos`).them(({data}) => {\n            setGithubState(prevState => ({\n                ...prevState,\n                repositories: []\n            }))\n        })\n    };\n\n    const contextValue = {\n         githubState,\n         getUser: useCallback((username) => getUser(username), []),\n         getUserRepos: useCallback(() => getUserRepos(), []),\n    };\n    return(\n       \n        <GithubContext.Provider value={contextValue}> \n        {children}\n        </GithubContext.Provider>\n    )\n}\n\nexport default GithubProvider;"]},"metadata":{},"sourceType":"module"}